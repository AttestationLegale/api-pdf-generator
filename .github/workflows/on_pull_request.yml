############################################################
#
#   WARNING: This repository has a specific CI/CD pipeline
#   due to its OpenSource status
#
############################################################

############################################################
# Proxy workflow that orchestrate platform specific actions
############################################################

name: "GENERIC - Test service"

on:
    pull_request:
        types: [opened, synchronize, reopened, ready_for_review]

# This duplicates codes from `ofa_test_java.yml`
# Reason is that I am waiting for nektos/act 0.2.22 to be released
# to move to composite actions
jobs:
    # This pre-job allows to save minutes (and by so, money) in case of duplicated runs
    pre_job:
        if: github.event.pull_request.draft == false
        environment: ${{ env.OFA_ENV }}
        continue-on-error: true
        runs-on: ubuntu-latest
        name: "Cancel previous branch jobs"
        timeout-minutes: 5
        steps:
            - name: "Cancel duplicate runs"
              id: skip_check
              uses: fkirc/skip-duplicate-actions@master
              with:
                  cancel_others: true
                  concurrent_skipping: "always"
                  github_token: ${{ secrets.ACTIONS_ACCESS_TOKEN  }}

    ofa_test_job:
        if: github.event.pull_request.draft == false
        environment: integration
        runs-on: ubuntu-latest
        name: "PR Application quality"
        timeout-minutes: 30
        steps:
            - name: "Checkout"
              id: checkout
              uses: actions/checkout@v2
              with:
                  ref: ${{ github.event.pull_request.head.sha }}
                  token: ${{ secrets.ACTIONS_ACCESS_TOKEN  }}

            # Defines runtime variables depending on context
            - name: "Init job env from inputs"
              id: test_init_wrapper_env
              uses: ./.github/actions/wrapper-init-env
              with:
                  perform_tests: "${{ env.PERFORM_TESTS }}"

            - name: "Tests settings"
              run: |
                  echo "Will use perform_tests=${{ steps.test_init_wrapper_env.outputs.perform_tests }}"
              shell: bash

            - name: "Tests"
              if: ${{ fromJSON(steps.test_init_wrapper_env.outputs.perform_tests ) }}
              uses: ./.github/actions/test_java
              with:
                  token: ${{ secrets.ACTIONS_ACCESS_TOKEN }}
                  ecr_aws_region: ${{ secrets.AWS_REGION }}
                  ecr_aws_access_key_id: ${{ secrets.AWS_ECS_SERVICE_DEPLOYER_ACCESS_KEY_ID }}
                  ecr_aws_secret_access_key: ${{ secrets.AWS_ECS_SERVICE_DEPLOYER_SECRET_ACCESS_KEY }}
                  sonar_token: ${{ secrets.SONAR_TOKEN }}
